-- Khuyến nghị: bật extension citext để so sánh username không phân biệt hoa/thường
CREATE EXTENSION IF NOT EXISTS citext;

-- Kiểu ENUM (tuỳ chọn; có thể thay bằng CHECK nếu bạn muốn)
DO $$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'loai_biendong_enum') THEN
    CREATE TYPE loai_biendong_enum AS ENUM ('tam_tru','tam_vang');
  END IF;
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'trang_thai_dotthu_enum') THEN
    CREATE TYPE trang_thai_dotthu_enum AS ENUM ('draft','open','closed');
  END IF;
END$$;

-- 1) VaiTro
CREATE TABLE vaitro (
  id_vaitro   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ten_vaitro  VARCHAR(50) NOT NULL
);

-- 2) TaiKhoan
CREATE TABLE taikhoan (
  id_taikhoan INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  username    CITEXT NOT NULL UNIQUE,
  password    VARCHAR(255) NOT NULL,
  id_vaitro   INT NOT NULL REFERENCES vaitro(id_vaitro) ON UPDATE RESTRICT ON DELETE RESTRICT
);

-- 3) HoKhau
CREATE TABLE hokhau (
  id_hokhau  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  so_can_ho  VARCHAR(20) NOT NULL UNIQUE,
  dien_tich  DOUBLE PRECISION
);

-- 4) NhanKhau
CREATE TABLE nhankhau (
  id_nhankhau       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ho_ten            VARCHAR(100) NOT NULL,
  ngay_sinh         DATE,
  cccd              VARCHAR(12) UNIQUE,
  quan_he_chu_ho    VARCHAR(50),
  id_hokhau         INT NOT NULL REFERENCES hokhau(id_hokhau) ON UPDATE RESTRICT ON DELETE RESTRICT,
  -- kiểm tra CCCD: đúng 12 ký tự số (cho phép NULL)
  CONSTRAINT cccd_format_chk CHECK (cccd IS NULL OR cccd ~ '^[0-9]{12}$')
);

CREATE INDEX idx_nhankhau_hokhau ON nhankhau(id_hokhau);

-- 5) BienDongNhanKhau
CREATE TABLE biendongnhankhau (
  id_biendong  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  loai_biendong loai_biendong_enum NOT NULL,       -- 'tam_tru' | 'tam_vang'
  ngay_batdau  DATE NOT NULL,
  ngay_ketthuc DATE,
  ly_do        TEXT,
  id_nhankhau  INT NOT NULL REFERENCES nhankhau(id_nhankhau) ON UPDATE RESTRICT ON DELETE CASCADE,
  CONSTRAINT ngay_bd_truoc_kt CHECK (ngay_ketthuc IS NULL OR ngay_ketthuc >= ngay_batdau)
);

CREATE INDEX idx_biendong_nhankhau ON biendongnhankhau(id_nhankhau);

-- 6) KhoanThu
CREATE TABLE khoanthu (
  id_khoanthu   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ten_khoanthu  VARCHAR(100) NOT NULL,
  don_gia       NUMERIC(15,2) NOT NULL CHECK (don_gia >= 0),
  don_vi_tinh   VARCHAR(20) NOT NULL
);

-- 7) DotThuPhi
CREATE TABLE dotthuphi (
  id_dotthu    INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ten_dotthu   VARCHAR(100) NOT NULL,
  ngay_batdau  DATE NOT NULL,
  ngay_ketthuc DATE,
  trang_thai   trang_thai_dotthu_enum DEFAULT 'draft',
  id_khoanthu  INT NOT NULL REFERENCES khoanthu(id_khoanthu) ON UPDATE RESTRICT ON DELETE RESTRICT,
  CONSTRAINT dotthu_time_chk CHECK (ngay_ketthuc IS NULL OR ngay_ketthuc >= ngay_batdau)
);

CREATE INDEX idx_dotthu_khoanthu ON dotthuphi(id_khoanthu);

-- 8) HoaDon
CREATE TABLE hoadon (
  id_hoadon  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  tong_tien  NUMERIC(15,2) NOT NULL CHECK (tong_tien >= 0),
  ngay_nop   DATE,
  id_hokhau  INT NOT NULL REFERENCES hokhau(id_hokhau) ON UPDATE RESTRICT ON DELETE RESTRICT,
  id_dotthu  INT NOT NULL REFERENCES dotthuphi(id_dotthu) ON UPDATE RESTRICT ON DELETE RESTRICT,
  -- mỗi hộ chỉ có 1 hóa đơn cho 1 đợt
  CONSTRAINT uq_hoadon_hokhau_dotthu UNIQUE (id_hokhau, id_dotthu)
);

CREATE INDEX idx_hoadon_hokhau ON hoadon(id_hokhau);
CREATE INDEX idx_hoadon_dotthu  ON hoadon(id_dotthu);

-- (tuỳ chọn) vài chú thích cột để team dễ đọc trong pgAdmin
COMMENT ON COLUMN hoadon.tong_tien IS 'Có thể để ứng dụng tính theo don_gia * đơn vị tính (m2/người) + rule riêng rồi ghi vào đây';
COMMENT ON COLUMN nhankhau.quan_he_chu_ho IS 'Ví dụ: Chu ho, Vo/Chong, Con, ...';
